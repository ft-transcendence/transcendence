version: '3.8'

volumes:
  data:

networks:
  backend:

services:
# FRONTEND
  front:
#    image: node:lts-alpine
    container_name: frontend
#    working_dir: /app
#    command: sh -c "npm install && npm run start"
    build: ./front
    volumes:
      - ./front:/app
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - backend
# BACKEND
  back:
#    image: node:lts-alpine
    container_name: backend
#    working_dir: /app
#    command: sh -c "npm install && npm run start:dev" 
    build: ./back
    volumes:
      - ./back:/app
    ports:
      - "4000:4000"
    restart: unless-stopped
    networks:
      - backend
# POSTGRES
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    ports:
      - 5432:5432
    restart: unless-stopped
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - backend
# NGINX
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl-certs/cert.crt:/cert.crt
      - ./nginx/ssl-certs/cert.key:/cert.key
#   build: ./nginx
    ports:
      - "1024:1024"
    restart: unless-stopped
    networks:
    - backend
# PGADMIN
