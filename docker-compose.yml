version: '3.8'

volumes:
  data:
  mini-io:

networks:
  backend:

services:
# FRONTEND
  front:
    image: node:lts-alpine
    container_name: frontend
    working_dir: /app
    command: sh -c "yarn install && yarn run start"
#    build: ./front
    volumes:
      - ./front:/app
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - backend
    depends_on:
      - back
# BACKEND
  back:
    image: node:lts-alpine
    container_name: backend
    working_dir: /app
    command: sh -c "yarn install && yarn global add @nestjs/cli && npx prisma migrate dev && yarn run start:dev" 
#    build: ./back
    volumes:
      - ./back:/app
    ports:
      - "4000:4000"
      - "5555:5555"
    restart: unless-stopped
    networks:
      - backend
    depends_on:
      - postgres
# POSTGRES
  postgres: #==dev-db
    image: postgres:14-alpine
    container_name: postgres
    ports:
      - 5432:5432
    restart: unless-stopped
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - backend
# NGINX
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
##      - ./nginx/ssl-certs/cert.crt:/cert.crt
##      - ./nginx/ssl-certs/cert.key:/cert.key
##   build: ./nginx
    ports:
      - "1024:1024"
#    command: sh -c "tail -f /dev/null"
    restart: unless-stopped
    networks:
    - backend
    depends_on:
      - back

  miniio:
    image: minio/minio:latest
    container_name: miniio
    command: minio server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: unless-stopped
    volumes:
      - mini-io:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    networks:
    - backend
    depends_on:
      - nginx
      - postgres
      - back